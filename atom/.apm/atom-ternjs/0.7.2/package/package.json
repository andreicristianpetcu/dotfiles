{"name":"atom-ternjs","main":"./lib/atom-ternjs","version":"0.7.2","private":false,"description":"Javascript code intelligence for atom with tern.js. Uses suggestion provider by autocomplete-plus.","activationCommands":{},"repository":{"type":"git","url":"https://github.com/tststs/atom-ternjs"},"license":"MIT","engines":{"atom":">=1.0.0"},"dependencies":{"jquery":"*","loophole":"*","tern":"git+https://github.com/marijnh/tern.git","tern-lint":"git+https://github.com/angelozerr/tern-lint.git","underscore-plus":"*"},"providedServices":{"autocomplete.provider":{"versions":{"2.0.0":"provide"}},"linter":{"versions":{"1.0.0":"provideLinter"}}},"keywords":["javascript","autocomplete-plus","autocomplete","tern"],"readme":"# atom-ternjs\n\n> Javascript code intelligence for atom with [Tern](https://github.com/marijnh/tern).\nUses suggestion provider by [autocomplete-plus](https://github.com/atom/autocomplete-plus).\n\n## Installation\n\nMake sure <a href=\"https://nodejs.org\">Node.js</a> is installed and the PATH variable is set.<br>\nMake sure <a href=\"http://git-scm.com\">GIT</a> is installed and the PATH variable is set.<br>\n\nConfigure your project\n* Navigate to Packages -> Atom Ternjs -> Configure project\n* The config view appears.\n* Hit \"Save & Restart Server\" to create/update the .tern-project file\n\n**Configure project doesn't support the plugins-section (yet).\nPlease add plugins manually by editing the .tern-project file as shown below**\n\nIf configure project does not work for you\n* In your project root create a file named .tern-project. See docs @ http://ternjs.net/doc/manual.html#configuration.\n* Check path in loadEagerly\n* Restart the server via *Packages -> Atom Ternjs -> Restart server*\n\nIf a root file named .tern-project is not found `~/.tern-config` serves as a default.\n\nExample `.tern-project` file (customize to your own needs):\n```json\n{\n  \"libs\": [\n    \"browser\",\n    \"ecma5\",\n    \"ecma6\",\n    \"jquery\"\n  ],\n  \"loadEagerly\": [\n    \"absolute/or/relative/path/to/your/js/**/*.js\"\n  ],\n  \"dontLoad\": [\n    \"absolute/or/relative/path/to/your/js/**/*.js\"\n  ],\n  \"plugins\": {\n    \"complete_strings\": {},\n    \"node\": {},\n    \"lint\": {},\n    \"angular\": {},\n    \"requirejs\": {},\n    \"doc_comment\": {\n      \"fullDocs\": true\n    }\n  }\n}\n```\n## Libs\n* browser: completion for vanilla js (optional)\n* ecma5: es5 (optional)\n* ecma6: es6 (optional)\n* jquery: completion for jQuery (optional)\n\n## Options\n* loadEagerly: provide the path to your projects js. Absolute path is recommended, but not necessary. (For relative path do not use `./` as a prefix. This sometimes leads to an unexpected behaviour)\n* dontLoad: can be used to prevent Tern from loading certain files. It also takes an array of file names or glob patterns.\n\n## Plugins\n* complete_strings: When enabled, this plugin will gather (short) strings in your code, and completing when inside a string will try to complete to previously seen strings. Takes a single option, maxLength, which controls the maximum length of string values to gather, and defaults to 15. (optional)\n* doc_comment: tern will look for JSDoc-style type declarations. Returns the full comment text instead of the first sentence. (optional)\n* node: NodeJS (optional)\n* lint: <a href=\"https://github.com/angelozerr/tern-lint\">angelozerr/tern-lint</a> is a tern plugin which is able to validate JavaScript files to collect semantic errors. <a href=\"https://github.com/AtomLinter/Linter\">Linter</a> is used to display these errors and warnings (optional)\n* angular: AngularJS (optional)\n* requirejs: RequireJS (optional, understand RequireJS-style dependency management)\n* For a list of possible plugins goto http://ternjs.net/doc/manual.html#plugins\n\n## .tern-project created/modified\n* After the file was created or has been modified, restart the server via *Packages -> Atom Ternjs -> Restart server*\n\n## Features\n* Completion (autocompletion triggers automatically, via strg+space or can be forced in any context with <kbd>ctrl+alt+space</kbd>)\n\n![atom-ternjs](http://www.tobias-schubert.com/github/github-atom-ternjs-9.png)\n\n![atom-ternjs](http://www.tobias-schubert.com/github/github-atom-ternjs-inline-2.png)\n* Find references (set your cursor position to one of variable, function or instance -> open context-menu and trigger \"Find references\" or use the shortcut <kbd>ctrl+shift+r</kbd>) Click any item in the generated reference-list and navigate directly to file and position\n\n![atom-ternjs](http://www.tobias-schubert.com/github/github-atom-ternjs-reference.png)\n\n* Documentation (displayed if a suggestion with a valid documentation is selected in the select-list)\n* Find definition (set your cursor position to one of variable, function or instance -> open context-menu and trigger \"Find definition\" or use the shortcut <kbd>ctrl+alt+d</kbd>)\n* Back from definition <kbd>ctrl+alt+z</kbd>\n* Rename variable (set your cursor position to a variable -> open context-menu and trigger \"Rename\" or use the shortcut <kbd>ctrl+alt+c</kbd>)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/tststs/atom-ternjs/issues"},"homepage":"https://github.com/tststs/atom-ternjs","_id":"atom-ternjs@0.7.2","_shasum":"06410fa5c1c0f8c41b434f7d963425e57dc9d1a5","_resolved":"file:../d-115725-10432-c178kd/package.tgz","_from":"../d-115725-10432-c178kd/package.tgz"}