# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := oniguruma
DEFS_Debug := \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-w \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-exceptions \
	-std=gnu++0x

INCS_Debug := \
	-I/home/andrei/.atom/.node-gyp/.node-gyp/0.22.0/src \
	-I/home/andrei/.atom/.node-gyp/.node-gyp/0.22.0/deps/uv/include \
	-I/home/andrei/.atom/.node-gyp/.node-gyp/0.22.0/deps/v8/include \
	-I$(srcdir)/deps/onig \
	-I$(srcdir)/deps/onig/enc

DEFS_Release := \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64'

# Flags passed to all source files.
CFLAGS_Release := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-w \
	-O3 \
	-ffunction-sections \
	-fdata-sections \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-exceptions \
	-std=gnu++0x

INCS_Release := \
	-I/home/andrei/.atom/.node-gyp/.node-gyp/0.22.0/src \
	-I/home/andrei/.atom/.node-gyp/.node-gyp/0.22.0/deps/uv/include \
	-I/home/andrei/.atom/.node-gyp/.node-gyp/0.22.0/deps/v8/include \
	-I$(srcdir)/deps/onig \
	-I$(srcdir)/deps/onig/enc

OBJS := \
	$(obj).target/$(TARGET)/deps/onig/regcomp.o \
	$(obj).target/$(TARGET)/deps/onig/regenc.o \
	$(obj).target/$(TARGET)/deps/onig/regerror.o \
	$(obj).target/$(TARGET)/deps/onig/regexec.o \
	$(obj).target/$(TARGET)/deps/onig/regext.o \
	$(obj).target/$(TARGET)/deps/onig/reggnu.o \
	$(obj).target/$(TARGET)/deps/onig/regparse.o \
	$(obj).target/$(TARGET)/deps/onig/regposerr.o \
	$(obj).target/$(TARGET)/deps/onig/regposix.o \
	$(obj).target/$(TARGET)/deps/onig/regsyntax.o \
	$(obj).target/$(TARGET)/deps/onig/regtrav.o \
	$(obj).target/$(TARGET)/deps/onig/regversion.o \
	$(obj).target/$(TARGET)/deps/onig/st.o \
	$(obj).target/$(TARGET)/deps/onig/enc/ascii.o \
	$(obj).target/$(TARGET)/deps/onig/enc/big5.o \
	$(obj).target/$(TARGET)/deps/onig/enc/cp1251.o \
	$(obj).target/$(TARGET)/deps/onig/enc/euc_jp.o \
	$(obj).target/$(TARGET)/deps/onig/enc/euc_kr.o \
	$(obj).target/$(TARGET)/deps/onig/enc/euc_tw.o \
	$(obj).target/$(TARGET)/deps/onig/enc/gb18030.o \
	$(obj).target/$(TARGET)/deps/onig/enc/iso8859_1.o \
	$(obj).target/$(TARGET)/deps/onig/enc/iso8859_2.o \
	$(obj).target/$(TARGET)/deps/onig/enc/iso8859_3.o \
	$(obj).target/$(TARGET)/deps/onig/enc/iso8859_4.o \
	$(obj).target/$(TARGET)/deps/onig/enc/iso8859_5.o \
	$(obj).target/$(TARGET)/deps/onig/enc/iso8859_6.o \
	$(obj).target/$(TARGET)/deps/onig/enc/iso8859_7.o \
	$(obj).target/$(TARGET)/deps/onig/enc/iso8859_8.o \
	$(obj).target/$(TARGET)/deps/onig/enc/iso8859_9.o \
	$(obj).target/$(TARGET)/deps/onig/enc/iso8859_10.o \
	$(obj).target/$(TARGET)/deps/onig/enc/iso8859_11.o \
	$(obj).target/$(TARGET)/deps/onig/enc/iso8859_13.o \
	$(obj).target/$(TARGET)/deps/onig/enc/iso8859_14.o \
	$(obj).target/$(TARGET)/deps/onig/enc/iso8859_15.o \
	$(obj).target/$(TARGET)/deps/onig/enc/iso8859_16.o \
	$(obj).target/$(TARGET)/deps/onig/enc/koi8.o \
	$(obj).target/$(TARGET)/deps/onig/enc/koi8_r.o \
	$(obj).target/$(TARGET)/deps/onig/enc/mktable.o \
	$(obj).target/$(TARGET)/deps/onig/enc/sjis.o \
	$(obj).target/$(TARGET)/deps/onig/enc/unicode.o \
	$(obj).target/$(TARGET)/deps/onig/enc/utf16_be.o \
	$(obj).target/$(TARGET)/deps/onig/enc/utf16_le.o \
	$(obj).target/$(TARGET)/deps/onig/enc/utf32_be.o \
	$(obj).target/$(TARGET)/deps/onig/enc/utf32_le.o \
	$(obj).target/$(TARGET)/deps/onig/enc/utf8.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-m64

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-m64

LIBS :=

$(obj).target/oniguruma.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/oniguruma.a: LIBS := $(LIBS)
$(obj).target/oniguruma.a: TOOLSET := $(TOOLSET)
$(obj).target/oniguruma.a: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,alink)

all_deps += $(obj).target/oniguruma.a
# Add target alias
.PHONY: oniguruma
oniguruma: $(obj).target/oniguruma.a

# Add target alias to "all" target.
.PHONY: all
all: oniguruma

# Add target alias
.PHONY: oniguruma
oniguruma: $(builddir)/oniguruma.a

# Copy this to the static library output path.
$(builddir)/oniguruma.a: TOOLSET := $(TOOLSET)
$(builddir)/oniguruma.a: $(obj).target/oniguruma.a FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/oniguruma.a
# Short alias for building this static library.
.PHONY: oniguruma.a
oniguruma.a: $(obj).target/oniguruma.a $(builddir)/oniguruma.a

# Add static library to "all" target.
.PHONY: all
all: $(builddir)/oniguruma.a

