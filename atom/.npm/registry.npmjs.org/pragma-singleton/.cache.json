{"_id":"pragma-singleton","_rev":"7-2b4a8cb267f8fe9e4c7f035070a80a06","name":"pragma-singleton","description":"Singleton design pattern implementation which easy to use","dist-tags":{"latest":"1.0.3"},"versions":{"1.0.3":{"name":"pragma-singleton","version":"1.0.3","author":{"name":"Pragma Dudes","email":"info@pragma-dudes.org"},"description":"Singleton design pattern implementation which easy to use","homepage":"https://github.com/pragma-dudes/pragma-singleton","keywords":["singleton","patterns","design"],"bugs":{"url":"https://github.com/pragma-dudes/pragma-singleton/issues","email":"info@pragma-dudes.org"},"repository":{"type":"git","url":"git://github.com/pragma-dudes/pragma-singleton.git"},"main":"./PragmaSingleton.js","engines":{"node":">=0.8.0"},"contributors":[{"name":"Denis Rechkunov","email":"rechkunov@pragma-dudes.org"}],"devDependencies":{"nodeunit":">=0.7.4"},"scripts":{"test":"node node_modules/nodeunit/bin/nodeunit tests/unit_tests --reporter ../../../tests/reporter/pragma-reporter.js"},"licenses":[{"type":"MIT","url":"https://github.com/pragma-dudes/pragma-singleton/blob/master/LICENCE"}],"readme":"#Pragma Singleton [![Build Status](https://secure.travis-ci.org/pragma-dudes/pragma-singleton.png)](http://travis-ci.org/pragma-dudes/pragma-singleton) [![NPM version](https://badge.fury.io/js/pragma-singleton.png)](http://badge.fury.io/js/pragma-singleton)\n\nSingleton design pattern implementation which easy to use.\n\nJust apply this to any constructor function and all 'new' operators for this constructor will return the same instance.\n\n##Usage\nTo install just use NPM\n\n```bash\nnpm install pragma-singleton\n```\n\n```javascript\nvar singleton = require('pragma-singleton');\n\nfunction Constructor(someValue) {\n\tthis.someValue = someValue;\n}\n\nvar SingletonConstructor = singleton(Constructor),\n\tinstance1 = new SingletonConstructor('value1'),\n\tinstance2 = new SingletonConstructor('value2');\n\nconsole.log(instance1 == instance2); // true, because the same instance\nconsole.log(instance2.someValue); // value1, because the value of first created instance\n\n```\n\nPragma Dudes wish you live long and prosper.\n\n<info@pragma-dudes.org>\n","readmeFilename":"README.md","_id":"pragma-singleton@1.0.3","dist":{"shasum":"6894317bb8d47157e59de2a4a009db7e6f63e30e","tarball":"http://registry.npmjs.org/pragma-singleton/-/pragma-singleton-1.0.3.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"pragma-dudes","email":"info@pragma-dudes.org"},"maintainers":[{"name":"pragma-dudes","email":"info@pragma-dudes.org"}],"directories":{}}},"readme":"#Pragma Singleton [![Build Status](https://secure.travis-ci.org/pragma-dudes/pragma-singleton.png)](http://travis-ci.org/pragma-dudes/pragma-singleton) [![NPM version](https://badge.fury.io/js/pragma-singleton.png)](http://badge.fury.io/js/pragma-singleton)\n\nSingleton design pattern implementation which easy to use.\n\nJust apply this to any constructor function and all 'new' operators for this constructor will return the same instance.\n\n##Usage\nTo install just use NPM\n\n```bash\nnpm install pragma-singleton\n```\n\n```javascript\nvar singleton = require('pragma-singleton');\n\nfunction Constructor(someValue) {\n\tthis.someValue = someValue;\n}\n\nvar SingletonConstructor = singleton(Constructor),\n\tinstance1 = new SingletonConstructor('value1'),\n\tinstance2 = new SingletonConstructor('value2');\n\nconsole.log(instance1 == instance2); // true, because the same instance\nconsole.log(instance2.someValue); // value1, because the value of first created instance\n\n```\n\nPragma Dudes wish you live long and prosper.\n\n<info@pragma-dudes.org>\n","maintainers":[{"name":"pragma-dudes","email":"info@pragma-dudes.org"},{"name":"pragmadash","email":"denis.rechkunov@gmail.com"}],"time":{"modified":"2013-09-03T15:15:46.076Z","created":"2013-08-21T10:56:59.326Z","1.0.3":"2013-08-21T10:57:04.772Z"},"author":{"name":"Pragma Dudes","email":"info@pragma-dudes.org"},"repository":{"type":"git","url":"git://github.com/pragma-dudes/pragma-singleton.git"},"users":{"tengisb":true},"_attachments":{},"_etag":"\"9PHDHHNF7BEVZZDXGBRSKP101\""}