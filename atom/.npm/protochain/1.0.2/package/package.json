{"name":"protochain","version":"1.0.2","description":"Prototype chain of any value as an Array","main":"protochain.js","scripts":{"test":"(babel test.js > protochain-test.js) && tape protochain-test.js","prepublish":"babel index.js > protochain.js","pretest":"npm run prepublish","posttest":"rm protochain-test.js"},"keywords":["object","inherit","prototypical","utility","proto","hierarchy","ancestors","grandparents","parents"],"author":{"name":"Tim Oxley","email":"secoif@gmail.com"},"license":"ISC","devDependencies":{"babel":"^4.6.6","tape":"^3.5.0"},"repository":{"type":"git","url":"https://github.com/timoxley/protochain.git"},"bugs":{"url":"https://github.com/timoxley/protochain/issues"},"homepage":"https://github.com/timoxley/protochain","readme":"# protochain\n\n[![Build Status](https://travis-ci.org/timoxley/protochain.svg?branch=master)](https://travis-ci.org/timoxley/protochain)\n\nGet the prototype chain of an object or primitive as an Array.\n\n## Why\n\nI often write this function, figure I should extract it. There are\nprobably other utilities out there that do this but I couldn't find\nthem so they're either poorly named/described or the search algorithm is not being very helpful or I simply searched for the wrong things.\n\n## Installation\n\n```\n> npm install protochain\n```\n\n## Usage\n\n### ES5\n\n```js\nvar protochain = require('protochain')\n\nprotochain({})\n// => [Object.prototype]\n\nprotochain(Object.create(null))\n// => []\n\nprotochain(new Error('message'))\n// => [Error.prototype, Object.prototype]\n\nprotochain(new TypeError('message'))\n// => [TypeError.prototype, Error.prototype, Object.prototype]\n\n// Inheritance\n\nfunction Person() {\n\n}\n\nfunction FancyPerson() {\n  Person.call(this)\n}\n\nFancyPerson.prototype = Object.create(Person.prototype)\n\nprotochain(new Person())\n// => [Person.prototype, Object.prototype]\n\nprotochain(new FancyPerson())\n// => [FancyPerson.prototype, Person.prototype, Object.prototype]\n\n// Primitives are OK\n\nprotochain(123)\n// => [Number.prototype, Object.prototype]\n\nprotochain('abc')\n// => [String.prototype, Object.prototype]\n\nprotochain(/abc/)\n// => [RegExp.prototype, Object.prototype]\n\nprotochain(true)\n// => [Boolean.prototype, Object.prototype]\n\nprotochain(false)\n// => [Boolean.prototype, Object.prototype]\n\n// Null & Undefined === Empty List\n\nprotochain(null)\n// => []\n\nprotochain(undefined)\n// => []\n\nprotochain()\n// => []\n```\n\n### ES6\n\n```js\n\nimport protochain from 'protochain'\n\nclass Person {}\nclass FancyPerson extends Person {}\n\nprotochain(new Person())\n// => [Person.prototype, Object.prototype]\n\nprotochain(new FancyPerson())\n// => [FancyPerson.prototype, Person.prototype, Object.prototype])\n\n```\n\n## License\n\nMIT\n","readmeFilename":"Readme.md","_id":"protochain@1.0.2","_shasum":"92115581c8bc0382a7ad0d0c78a355173633de50","_resolved":"https://registry.npmjs.org/protochain/-/protochain-1.0.2.tgz","_from":"https://registry.npmjs.org/protochain/-/protochain-1.0.2.tgz"}