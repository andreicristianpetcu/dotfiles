{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":64,"width":1920,"height":1016,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/home/andrei/Dev/riweb"],"buffers":[{"text":"'use strict';\n\nangular.module('riwebApp')\n    .service('RipplePeersService', function (RippleRemoteService) {\n        var peersInfo = {\n            peers: []\n        };\n        \n        return {\n            refreshPeers: function (callback) {\n                RippleRemoteService.onRemotePresent(function (remote) {\n                    remote.requestPeers(function (error, info) {\n                        if(info && info.peers){\n                            peersInfo.peers = info.peers;\n                        } else {\n                            peersInfo.peers = undefined;\n                        }\n                        if(callback){\n                            callback(peersInfo);\n                        }\n                    });\n                });\n            },\n            peersInfo: peersInfo\n        };\n    });\n","markerStore":{"nextMarkerId":50,"markersById":{"0":{"range":{"start":{"row":7,"column":8},"end":{"row":7,"column":8}},"properties":{"type":"selection","editorId":8,"goalScreenRange":null,"preserveFolds":true,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"7":{"range":{"start":{"row":2,"column":25},"end":{"row":2,"column":26}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"8":{"range":{"start":{"row":2,"column":14},"end":{"row":2,"column":15}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"9":{"range":{"start":{"row":2,"column":25},"end":{"row":2,"column":26}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"10":{"range":{"start":{"row":2,"column":14},"end":{"row":2,"column":15}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"43":{"range":{"start":{"row":7,"column":0},"end":{"row":8,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"49":{"range":{"start":{"row":7,"column":0},"end":{"row":8,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false}},"version":2},"history":{"version":2,"nextCheckpointId":37,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andrei/Dev/riweb/client/app/RipplePeersService/RipplePeersService.service.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"44e45bdb19e272ac3f80450c64626fadfffe6a2f","deserializer":"TextBuffer","version":2},{"text":"'use strict';\n\nangular.module('riwebApp')\n    .service('RippleWalletService', function (RippleAccountService,\n        Auth, socket, $log) {\n\n        var walletInfo = {\n            wallet: {}\n        };\n\n        var currentUser = Auth.getCurrentUser();\n\n        function getCurrentUserWallet(callback) {\n            currentUser = Auth.getCurrentUser();\n\n            if (!currentUser.email) {\n                return; // not logged in\n            }\n\n            socket.socket.on('post:create_wallet', function (rippleAddress) {\n                socket.socket.removeAllListeners('post:create_wallet');\n                walletInfo.wallet = rippleAddress;\n\n                RippleAccountService.accountInfo.account = currentUser.name;\n                RippleAccountService.accountInfo.iban = currentUser.iban;\n\n                callback();\n            });\n\n            socket.socket.emit('create_wallet', { ownerEmail: currentUser.email, role: currentUser.role });\n        }\n\n        function loadCurrentUserBalance() {\n            $log.debug('loadCurrentUserBalance');\n            var user = Auth.getCurrentUser();\n\n            if (!user.email) {\n                return; // No user is logged in, please go away\n            }\n\n            socket.socket.on('post:list_transactions', function (result) {\n                if (result.status === 'success') {\n                    RippleAccountService.accountInfo.transactions = result.transactions;\n                    if (console.table) {\n                        console.log('post:list_transactions');\n                        console.table(result.transactions);\n                    }\n                }\n            });\n\n            // socket.socket.emit('account_info', user.email);\n            socket.socket.emit('list_transactions', user.email);\n        }\n\n        return {\n            getCurrentUserWallet: getCurrentUserWallet,\n            loadCurrentUserBalance: loadCurrentUserBalance,\n            walletInfo: walletInfo\n        };\n    });\n","markerStore":{"nextMarkerId":40,"markersById":{"0":{"range":{"start":{"row":11,"column":0},"end":{"row":11,"column":0}},"properties":{"type":"selection","editorId":26,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1":{"range":{"start":{"row":13,"column":0},"end":{"row":13,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"2":{"range":{"start":{"row":13,"column":0},"end":{"row":13,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":10,"undoStack":[{"type":"group-start","snapshot":{"0":{"range":[[11,48],[11,48]],"properties":{"type":"selection","editorId":26,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1":{"range":[[13,51],[13,52]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"2":{"range":[[20,8],[20,9]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[3,0],[3,0]],"newRange":[[3,0],[5,0]],"oldText":"","newText":"    .service('RippleWalletService', function (RippleAccountService,\n        Auth, socket, $log) {\n"}},{"type":"change","content":{"oldRange":[[5,0],[7,0]],"newRange":[[5,0],[5,0]],"oldText":"    .service('RippleWalletService', function (Wallet, RippleRemoteService, RippleAccountService, TrustLineService,\n                                              Auth, RIPPLE_ROOT_ACCOUNT) {\n","newText":""}},{"type":"change","content":{"oldRange":[[10,0],[11,0]],"newRange":[[10,0],[10,0]],"oldText":"        var theRemote;\n","newText":""}},{"type":"change","content":{"oldRange":[[12,0],[12,0]],"newRange":[[12,0],[13,0]],"oldText":"","newText":"        function getCurrentUserWallet(callback) {\n"}},{"type":"change","content":{"oldRange":[[13,0],[23,0]],"newRange":[[13,0],[13,0]],"oldText":"        function showTransactionResultMessage(err) {\n            if (err) {\n                swal('Error', 'Failed to set the DefaultRipple flag on the cold wallet account: ' + err.message, 'error');\n            }\n            else {\n                swal('Info', 'Set the DefaultRipple flag on the cold wallet account', 'info');\n            }\n        }\n\n        function getCurrentUserWallet(callback){\n","newText":""}},{"type":"change","content":{"oldRange":[[14,0],[23,0]],"newRange":[[14,0],[14,0]],"oldText":"            Wallet.getByOwnerEmail({ownerEmail: currentUser.email}).$promise.then(function(data){\n                if(data.length >= 1){\n                    walletInfo.wallet = data[0];\n                } else {\n                    walletInfo.wallet = {};\n                }\n                callback(data);\n            });\n        }\n","newText":""}},{"type":"change","content":{"oldRange":[[15,0],[15,0]],"newRange":[[15,0],[17,0]],"oldText":"","newText":"            if (!currentUser.email) {\n                return; // not logged in\n"}},{"type":"change","content":{"oldRange":[[17,0],[20,0]],"newRange":[[17,0],[17,0]],"oldText":"        function setAccountFlagsForAdmin(err, flags) {\n            if (err) {\n                swal('Error', 'There was an error communicating with the server: ' + err.message, 'error');\n","newText":""}},{"type":"change","content":{"oldRange":[[18,0],[23,0]],"newRange":[[18,0],[18,0]],"oldText":"            else {\n                /*jshint bitwise: false*/\n                if (!(flags & 0x00800000)) {\n                    // OK, let's set the DefaultRipple flag if it's not there\n                    theRemote.setSecret(RIPPLE_ROOT_ACCOUNT.address, RIPPLE_ROOT_ACCOUNT.secret);\n","newText":""}},{"type":"change","content":{"oldRange":[[19,0],[19,0]],"newRange":[[19,0],[22,0]],"oldText":"","newText":"            socket.socket.on('post:create_wallet', function (rippleAddress) {\n                socket.socket.removeAllListeners('post:create_wallet');\n                walletInfo.wallet = rippleAddress;\n"}},{"type":"change","content":{"oldRange":[[22,0],[26,0]],"newRange":[[22,0],[22,0]],"oldText":"                    var transaction = theRemote.createTransaction('AccountSet', {\n                        account: RIPPLE_ROOT_ACCOUNT.address,\n                        set: 'DefaultRipple'\n                    });\n","newText":""}},{"type":"change","content":{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[25,0]],"oldText":"","newText":"                RippleAccountService.accountInfo.account = currentUser.name;\n                RippleAccountService.accountInfo.iban = currentUser.iban;\n"}},{"type":"change","content":{"oldRange":[[25,0],[26,0]],"newRange":[[25,0],[25,0]],"oldText":"                    transaction.submit(showTransactionResultMessage);\n","newText":""}},{"type":"change","content":{"oldRange":[[26,0],[26,0]],"newRange":[[26,0],[28,0]],"oldText":"","newText":"                callback();\n            });\n"}},{"type":"change","content":{"oldRange":[[28,0],[33,0]],"newRange":[[28,0],[28,0]],"oldText":"                } else {\n                    console.log('The admin account wallet has the DefaultRipple flag active, flags are: ' + flags);\n                }\n            }\n        }\n","newText":""}},{"type":"change","content":{"oldRange":[[29,0],[29,0]],"newRange":[[29,0],[30,0]],"oldText":"","newText":"            socket.socket.emit('create_wallet', { ownerEmail: currentUser.email, role: currentUser.role });\n"}},{"type":"change","content":{"oldRange":[[30,0],[39,0]],"newRange":[[30,0],[30,0]],"oldText":"        function checkColdWalletFlagsWithRemote(remote) {\n            theRemote = remote;\n\n            var reqOptions = {\n                account: RIPPLE_ROOT_ACCOUNT.address,\n                ledger: 'validated'\n            };\n\n            theRemote.requestAccountFlags(reqOptions, setAccountFlagsForAdmin);\n","newText":""}},{"type":"change","content":{"oldRange":[[32,0],[32,0]],"newRange":[[32,0],[35,0]],"oldText":"","newText":"        function loadCurrentUserBalance() {\n            $log.debug('loadCurrentUserBalance');\n            var user = Auth.getCurrentUser();\n"}},{"type":"change","content":{"oldRange":[[35,0],[38,0]],"newRange":[[35,0],[35,0]],"oldText":"        function checkColdWalletFlags() {\n            RippleRemoteService.onRemotePresent(checkColdWalletFlagsWithRemote);\n        }\n","newText":""}},{"type":"change","content":{"oldRange":[[36,0],[36,0]],"newRange":[[36,0],[39,0]],"oldText":"","newText":"            if (!user.email) {\n                return; // No user is logged in, please go away\n            }\n"}},{"type":"change","content":{"oldRange":[[39,0],[42,0]],"newRange":[[39,0],[39,0]],"oldText":"        function loadCurrentUserBalance(callback) {\n            RippleAccountService.resetAccount();\n            if (Auth.getCurrentUser().email) {\n","newText":""}},{"type":"change","content":{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[46,0]],"oldText":"","newText":"            socket.socket.on('post:list_transactions', function (result) {\n                if (result.status === 'success') {\n                    RippleAccountService.accountInfo.transactions = result.transactions;\n                    if (console.table) {\n                        console.log('post:list_transactions');\n                        console.table(result.transactions);\n"}},{"type":"change","content":{"oldRange":[[46,0],[52,0]],"newRange":[[46,0],[46,0]],"oldText":"                getCurrentUserWallet(function (data) {\n                    if (data.length >= 1) {\n                        walletInfo.wallet = data[0];\n                        RippleAccountService.loadBalance(walletInfo.wallet.publicKey, callback);\n                    } else {\n                        createWallet();\n","newText":""}},{"type":"change","content":{"oldRange":[[47,0],[47,0]],"newRange":[[47,0],[48,0]],"oldText":"","newText":"                }\n"}},{"type":"change","content":{"oldRange":[[48,0],[69,0]],"newRange":[[48,0],[48,0]],"oldText":"                });\n            }\n        }\n\n        function saveWallet(newWallet) {\n            Wallet.save(newWallet,\n                function () {\n                    walletInfo.wallet = newWallet;\n                    makeInitialXRPTransfer(newWallet.publicKey);\n                },\n                function () {\n                    walletInfo.wallet = {};\n                    swal('Error', 'Sorry there was a problem processing your request!', 'error');\n                });\n        }\n\n        function buildNewInitialXRPTransaction(destinationAddress) {\n            return theRemote.createTransaction('Payment', {\n                account: RIPPLE_ROOT_ACCOUNT.address,\n                destination: destinationAddress,\n                amount: 300000000\n","newText":""}},{"type":"change","content":{"oldRange":[[49,0],[50,0]],"newRange":[[49,0],[49,0]],"oldText":"        }\n","newText":""}},{"type":"change","content":{"oldRange":[[50,0],[50,0]],"newRange":[[50,0],[52,0]],"oldText":"","newText":"            // socket.socket.emit('account_info', user.email);\n            socket.socket.emit('list_transactions', user.email);\n"}},{"type":"change","content":{"oldRange":[[52,0],[73,0]],"newRange":[[52,0],[52,0]],"oldText":"        function makeInitialXRPTransfer(destinationAddress) {\n            //do not send money to self\n            if (destinationAddress !== RIPPLE_ROOT_ACCOUNT.address) {\n                RippleRemoteService.onRemotePresent(function (remote) {\n                    theRemote = remote;\n                    theRemote.setSecret(RIPPLE_ROOT_ACCOUNT.address, RIPPLE_ROOT_ACCOUNT.secret);\n\n                    var transaction = buildNewInitialXRPTransaction(destinationAddress);\n\n                    transaction.submit(function (err) {\n                        if (!err) {\n                            var makeInitialTrustLines = TrustLineService.buildMakeInitialTrustLines(walletInfo, remote);\n                            makeInitialTrustLines(destinationAddress);\n                        } else {\n                            swal('Error', 'Sorry there was a problem processing your request! ' + err.message, 'error');\n                        }\n                    });\n                });\n            } else {\n                loadCurrentUserBalance();\n            }\n","newText":""}},{"type":"change","content":{"oldRange":[[54,0],[94,0]],"newRange":[[54,0],[54,0]],"oldText":"        function generateNewWallet() {\n            var newWallet = {};\n            newWallet.ownerEmail = currentUser.email;\n            // generate new wallet\n            var wallet = ripple.Wallet.generate();\n            newWallet.publicKey = wallet.address;\n            newWallet.passphrase = wallet.secret;\n            saveWallet(newWallet);\n        }\n\n        function reuseAdminWallet() {\n            var newWallet = {};\n            newWallet.ownerEmail = currentUser.email;\n            //reuse existing known wallet\n            newWallet.publicKey = RIPPLE_ROOT_ACCOUNT.address;\n            newWallet.passphrase = RIPPLE_ROOT_ACCOUNT.secret;\n            saveWallet(newWallet);\n            checkColdWalletFlags();\n        }\n\n        function generateWalletIfMissing(existingWalletFound) {\n            if (existingWalletFound.length < 1) {\n                if (currentUser.role === 'admin') {\n                    reuseAdminWallet();\n                } else {\n                    generateNewWallet();\n                }\n            }\n        }\n\n        function createWallet() {\n            console.log('Creating wallet');\n            if (currentUser) {\n                if (currentUser.email !== walletInfo.makingWalletForEmail) {\n                    walletInfo.makingWalletForEmail = currentUser.email;\n                    getCurrentUserWallet(generateWalletIfMissing);\n                }\n            }\n        }\n\n","newText":""}},{"type":"change","content":{"oldRange":[[56,0],[57,0]],"newRange":[[56,0],[56,0]],"oldText":"            createWallet: createWallet,\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[10,48],[10,48]],"properties":{"type":"selection","editorId":26,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1":{"range":[[13,0],[13,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"2":{"range":[[13,0],[13,0]],"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/home/andrei/Dev/riweb/client/app/RippleWalletService/RippleWalletService.service.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"3a9ee58502454bc5fda648123a0e0fe74938dd75","deserializer":"TextBuffer","version":2},{"text":"<div ng-include=\"'components/navbar/navbar.html'\"></div>\n\n<div class=\"container\">\n    <div class=\"panel panel-info\">\n        <div class=\"panel-heading\">\n            <h3 id=\"panel-title\" class=\"panel-title\">My account: <strong>{{getMyAccountUser().email}}</strong></h3>\n        </div>\n        <div class=\"panel-body\">\n            <h4 id=\"panel-title\" class=\"panel-title\" ng-show=\"walletInfo.wallet\">Account: <strong>{{getMyAccountUser().name}}</strong></h4>            \n            <h4 ng-show=\"accountInfo.iban\">IBAN: <strong>{{accountInfo.iban}}</strong></h4>            \n            <!--<h4 ng-show=\"accountInfo.balance\">Current balance: <strong>{{accountInfo.balance}}</strong> €</h4>-->\n\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"alert alert-warning\" ng-hide=\"walletInfo.wallet\" role=\"alert\">Please wait, you do not have an wallet yet.</div>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <button ng-show=\"walletInfo.wallet\" type=\"button\" class=\"btn btn-default btn-lg btn-success\"\n                            aria-label=\"Left Align\"\n                            ng-click=\"transferMoney()\">\n                        <span class=\"glyphicon glyphicon-euro\" aria-hidden=\"true\"></span>\n                        Transfer money\n                    </button>\n                <span ng-show=\"walletInfo.wallet\">\n                    Amount to transfer <input ng-model=\"amountToTransfer\"></input>\n                </span>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"panel panel-info\" ng-show=\"accountInfo.transactions\">\n        <div class=\"panel-heading\">\n            <h3 id=\"panel-title\" class=\"panel-title\">Transactions</strong></h3>\n        </div>\n        <div class=\"panel-body\">\n            <div class=\"alert alert-warning\" ng-hide=\"accountInfo.transactions\" role=\"alert\">No transactions yet</div>\n\n            <table class=\"table\" ng-show=\"accountInfo.transactions\">\n                <thead>\n                <tr>\n                    <th>From</th>\n                    <th>To</th>\n                    <th>Amount</th>\n                    <th ng-hide=\"true\">Fee</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr ng-repeat=\"transaction in accountInfo.transactions\">\n                    <td>{{transaction.source}}</td>\n                    <td>{{transaction.destination}}</td>\n                    <td>{{transaction.amount}}</td>\n                    <td ng-hide=\"true\">{{transaction.fee}}</td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div class=\"panel panel-info\" ng-hide=\"true\">\n        <div class=\"panel-heading\">\n            <h3 id=\"panel-title\" class=\"panel-title\">Network status</strong></h3>\n        </div>\n        <div class=\"panel-body\">\n            <div class=\"alert alert-warning\" ng-hide=\"serverInfo.server_name\" role=\"alert\">Not connected to server yet</div>\n            <h4 ng-show=\"serverInfo.server_name\">Connected to server: <strong>{{serverInfo.server_name}}</strong></h4>\n            <h4 ng-show=\"serverInfo.ledgerClosed\">Last ledger closed: <strong>{{serverInfo.ledgerClosed}}</strong></h4>\n            <h4>{{serverInfo.error}}</h4>\n        </div>\n    </div>\n    <!--<div class=\"panel panel-info\" ng-show=\"serverInfo.server_name\">\n        <div class=\"panel-heading\">\n            <h3 id=\"panel-title\" class=\"panel-title\">Peers</strong></h3>\n        </div>\n        <div class=\"panel-body\">\n            <div class=\"alert alert-warning\" ng-hide=\"peersInfo.peers\" role=\"alert\">Not connected to peers</div>\n            <table class=\"table\" ng-show=\"peersInfo.peers\">\n                <thead>\n                <tr>\n                    <th>IP</th>\n                    <th>Ledger</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr ng-repeat=\"peer in peersInfo.peers\">\n                    <td>{{peer.address}}</td>\n                    <td>{{peer.ledger}}</td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>-->\n\n\n</div>\n","markerStore":{"nextMarkerId":76,"markersById":{"0":{"range":{"start":{"row":21,"column":51},"end":{"row":21,"column":51}},"properties":{"type":"selection","editorId":36,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"26":{"range":{"start":{"row":22,"column":51},"end":{"row":22,"column":52}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"27":{"range":{"start":{"row":22,"column":52},"end":{"row":22,"column":53}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"74":{"range":{"start":{"row":20,"column":21},"end":{"row":20,"column":27}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"75":{"range":{"start":{"row":25,"column":22},"end":{"row":25,"column":28}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false}},"version":2},"history":{"version":2,"nextCheckpointId":21,"undoStack":[{"type":"group-start","snapshot":{"0":{"range":[[21,51],[21,51]],"properties":{"type":"selection","editorId":36,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[8,0],[8,0]],"newRange":[[8,0],[11,0]],"oldText":"","newText":"            <h4 id=\"panel-title\" class=\"panel-title\" ng-show=\"walletInfo.wallet\">Account: <strong>{{getMyAccountUser().name}}</strong></h4>            \n            <h4 ng-show=\"accountInfo.iban\">IBAN: <strong>{{accountInfo.iban}}</strong></h4>            \n            <!--<h4 ng-show=\"accountInfo.balance\">Current balance: <strong>{{accountInfo.balance}}</strong> €</h4>-->\n"}},{"type":"change","content":{"oldRange":[[11,0],[13,0]],"newRange":[[11,0],[11,0]],"oldText":"            <h4 id=\"panel-title\" class=\"panel-title\" ng-show=\"accountInfo.account\">Account: <strong>{{accountInfo.account}}</strong></h4>\n            <h4 ng-show=\"accountInfo.balance\">Current balance: <strong>{{accountInfo.balance}}</strong> €</h4>\n","newText":""}},{"type":"change","content":{"oldRange":[[14,0],[14,0]],"newRange":[[14,0],[15,0]],"oldText":"","newText":"                    <div class=\"alert alert-warning\" ng-hide=\"walletInfo.wallet\" role=\"alert\">Please wait, you do not have an wallet yet.</div>\n"}},{"type":"change","content":{"oldRange":[[15,0],[16,0]],"newRange":[[15,0],[15,0]],"oldText":"                    <div class=\"alert alert-warning\" ng-hide=\"accountInfo.account\" role=\"alert\">Please wait, you do not have an wallet yet.</div>\n","newText":""}},{"type":"change","content":{"oldRange":[[20,0],[20,0]],"newRange":[[20,0],[21,0]],"oldText":"","newText":"                    <button ng-show=\"walletInfo.wallet\" type=\"button\" class=\"btn btn-default btn-lg btn-success\"\n"}},{"type":"change","content":{"oldRange":[[21,0],[22,0]],"newRange":[[21,0],[21,0]],"oldText":"                    <button ng-show=\"accountInfo.account\" type=\"button\" class=\"btn btn-default btn-lg btn-success\"\n","newText":""}},{"type":"change","content":{"oldRange":[[26,0],[26,0]],"newRange":[[26,0],[27,0]],"oldText":"","newText":"                <span ng-show=\"walletInfo.wallet\">\n"}},{"type":"change","content":{"oldRange":[[27,0],[28,0]],"newRange":[[27,0],[27,0]],"oldText":"                <span ng-show=\"accountInfo.account\">\n","newText":""}},{"type":"change","content":{"oldRange":[[46,0],[46,0]],"newRange":[[46,0],[47,0]],"oldText":"","newText":"                    <th ng-hide=\"true\">Fee</th>\n"}},{"type":"change","content":{"oldRange":[[47,0],[48,0]],"newRange":[[47,0],[47,0]],"oldText":"                    <th>Fee</th>\n","newText":""}},{"type":"change","content":{"oldRange":[[51,0],[51,0]],"newRange":[[51,0],[55,0]],"oldText":"","newText":"                    <td>{{transaction.source}}</td>\n                    <td>{{transaction.destination}}</td>\n                    <td>{{transaction.amount}}</td>\n                    <td ng-hide=\"true\">{{transaction.fee}}</td>\n"}},{"type":"change","content":{"oldRange":[[55,0],[59,0]],"newRange":[[55,0],[55,0]],"oldText":"                    <td>{{transaction.tx.Account}}</td>\n                    <td>{{transaction.tx.Destination}}</td>\n                    <td>{{getAmountDisplayText(transaction.tx.Amount)}}</td>\n                    <td>{{transaction.tx.Fee}}</td>\n","newText":""}},{"type":"change","content":{"oldRange":[[60,0],[60,0]],"newRange":[[60,0],[61,0]],"oldText":"","newText":"    <div class=\"panel panel-info\" ng-hide=\"true\">\n"}},{"type":"change","content":{"oldRange":[[61,0],[62,0]],"newRange":[[61,0],[61,0]],"oldText":"    <div class=\"panel panel-info\">\n","newText":""}},{"type":"change","content":{"oldRange":[[71,0],[71,0]],"newRange":[[71,0],[72,0]],"oldText":"","newText":"    <!--<div class=\"panel panel-info\" ng-show=\"serverInfo.server_name\">\n"}},{"type":"change","content":{"oldRange":[[72,0],[73,0]],"newRange":[[72,0],[72,0]],"oldText":"    <div class=\"panel panel-info\" ng-show=\"serverInfo.server_name\">\n","newText":""}},{"type":"change","content":{"oldRange":[[92,0],[92,0]],"newRange":[[92,0],[93,0]],"oldText":"","newText":"    </div>-->\n"}},{"type":"change","content":{"oldRange":[[93,0],[94,0]],"newRange":[[93,0],[93,0]],"oldText":"    </div>\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[22,51],[22,51]],"properties":{"type":"selection","editorId":36,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/home/andrei/Dev/riweb/client/app/myaccount/myaccount.html","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"ef4a0d1b644a111c7ef9182e8f3307452b16777a","deserializer":"TextBuffer","version":2},{"text":"'use strict';\n\nangular.module('riwebApp')\n    .controller('MyaccountCtrl', function ($scope, $rootScope, Auth, User, Wallet,\n        RippleRemoteService, FormattingService, RipplePeersService,\n        RippleAccountService, RippleWalletService, RippleTransactionService) {\n\n        // Dismiss user message\n        if ($rootScope.message) {\n            delete $rootScope.message;\n        }\n\n        $scope.amountToTransfer = 100;\n\n        $scope.getMyAccountUser = Auth.getCurrentUser;\n        $scope.getAmountDisplayText = FormattingService.getAmountDisplayText;\n\n        $scope.transferMoney = function () {\n            RippleTransactionService.transferMoney($scope.amountToTransfer);\n        };\n\n        $scope.serverInfo = RippleRemoteService.serverInfo;\n        $scope.peersInfo = RipplePeersService.peersInfo;\n        $scope.accountInfo = RippleAccountService.accountInfo;\n        $scope.walletInfo = RippleWalletService.walletInfo;\n\n        var loadCurrentUserBalance = RippleWalletService.loadCurrentUserBalance;\n        var refreshPeers = RipplePeersService.refreshPeers;\n\n        function refreshAngular() {\n            _.defer(function () {\n                $scope.$apply();\n            });\n        }\n\n        $scope.\n\n        function refreshCurrentUserWallet() {\n            RippleWalletService.getCurrentUserWallet(function () {\n                loadCurrentUserBalance(refreshAngular);\n            });\n        }\n\n        RippleAccountService.resetAccount();\n        refreshAngular();\n\n        $scope.$on('currentUser', function () {\n            refreshCurrentUserWallet();\n        });\n\n        refreshCurrentUserWallet();\n        RippleRemoteService.onRemotePresent(function (remote) {\n\n            remote.on('ledger_closed', function () {\n                refreshPeers(refreshAngular);\n                loadCurrentUserBalance(refreshAngular);\n            });\n\n            remote.on('transactions', function () {\n                loadCurrentUserBalance(refreshAngular);\n            });\n        });\n\n    });\n","markerStore":{"nextMarkerId":109,"markersById":{"0":{"range":{"start":{"row":35,"column":15},"end":{"row":35,"column":15}},"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"76":{"range":{"start":{"row":34,"column":0},"end":{"row":36,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"77":{"range":{"start":{"row":62,"column":0},"end":{"row":63,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false}},"version":2},"history":{"version":2,"nextCheckpointId":99,"undoStack":[{"type":"group-start","snapshot":{"0":{"range":[[36,39],[36,39]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[3,0],[3,0]],"newRange":[[3,0],[6,0]],"oldText":"","newText":"    .controller('MyaccountCtrl', function ($scope, $rootScope, Auth, User, Wallet,\n        RippleRemoteService, FormattingService, RipplePeersService,\n        RippleAccountService, RippleWalletService, RippleTransactionService) {\n"}},{"type":"change","content":{"oldRange":[[6,0],[9,0]],"newRange":[[6,0],[6,0]],"oldText":"    .controller('MyaccountCtrl', function ($scope, Auth, User, Wallet, RIPPLE_ROOT_ACCOUNT, TrustLineService,\n                                           RippleRemoteService, FormattingService, RipplePeersService,\n                                           RippleAccountService, RippleWalletService, RippleTransactionService) {\n","newText":""}},{"type":"change","content":{"oldRange":[[7,0],[7,0]],"newRange":[[7,0],[12,0]],"oldText":"","newText":"        // Dismiss user message\n        if ($rootScope.message) {\n            delete $rootScope.message;\n        }\n\n"}},{"type":"change","content":{"oldRange":[[17,0],[17,0]],"newRange":[[17,0],[18,0]],"oldText":"","newText":"        $scope.transferMoney = function () {\n"}},{"type":"change","content":{"oldRange":[[18,0],[19,0]],"newRange":[[18,0],[18,0]],"oldText":"        $scope.transferMoney = function(){\n","newText":""}},{"type":"change","content":{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[25,0]],"oldText":"","newText":"        $scope.walletInfo = RippleWalletService.walletInfo;\n"}},{"type":"change","content":{"oldRange":[[29,0],[29,0]],"newRange":[[29,0],[30,0]],"oldText":"","newText":"        function refreshAngular() {\n"}},{"type":"change","content":{"oldRange":[[30,0],[31,0]],"newRange":[[30,0],[30,0]],"oldText":"        function refreshAngular(){\n","newText":""}},{"type":"change","content":{"oldRange":[[36,0],[36,0]],"newRange":[[36,0],[37,0]],"oldText":"","newText":"            RippleWalletService.getCurrentUserWallet(function () {\n"}},{"type":"change","content":{"oldRange":[[37,0],[38,0]],"newRange":[[37,0],[37,0]],"oldText":"            RippleWalletService.getCurrentUserWallet(function(){\n","newText":""}},{"type":"change","content":{"oldRange":[[41,0],[41,0]],"newRange":[[41,0],[45,0]],"oldText":"","newText":"        RippleAccountService.resetAccount();\n        refreshAngular();\n\n        $scope.$on('currentUser', function () {\n"}},{"type":"change","content":{"oldRange":[[45,0],[46,0]],"newRange":[[45,0],[45,0]],"oldText":"        $scope.$on('currentUser', function(event, currentUser){\n","newText":""}},{"type":"change","content":{"oldRange":[[60,0],[60,0]],"newRange":[[60,0],[61,0]],"oldText":"","newText":"        \n"}},{"type":"group-end","snapshot":{"0":{"range":[[45,39],[45,39]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[33,9],[33,9]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[33,9],[33,9]],"newRange":[[33,9],[34,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[34,0],[34,0]],"newRange":[[34,0],[34,8]],"oldText":"","newText":"        "}},{"type":"group-end","snapshot":{"0":{"range":[[34,8],[34,8]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[34,8],[34,8]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[34,8],[34,8]],"newRange":[[34,8],[35,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[35,0],[35,0]],"newRange":[[35,0],[35,8]],"oldText":"","newText":"        "}},{"type":"group-end","snapshot":{"0":{"range":[[35,8],[35,8]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,8],[35,8]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,8],[35,8]],"newRange":[[35,8],[35,9]],"oldText":"","newText":"f"}},{"type":"group-end","snapshot":{"0":{"range":[[35,9],[35,9]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,9],[35,9]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,9],[35,9]],"newRange":[[35,9],[35,10]],"oldText":"","newText":"e"}},{"type":"group-end","snapshot":{"0":{"range":[[35,10],[35,10]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,10],[35,10]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,9],[35,10]],"newRange":[[35,9],[35,9]],"oldText":"e","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[35,9],[35,9]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,9],[35,9]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,9],[35,9]],"newRange":[[35,9],[35,10]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[35,10],[35,10]],"newRange":[[35,10],[35,12]],"oldText":"","newText":"  "}},{"type":"group-end","snapshot":{"0":{"range":[[35,12],[35,12]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,12],[35,12]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,11],[35,12]],"newRange":[[35,11],[35,11]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[35,10],[35,11]],"newRange":[[35,10],[35,10]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[35,9],[35,10]],"newRange":[[35,9],[35,9]],"oldText":"u","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[35,9],[35,9]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,9],[35,9]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,8],[35,9]],"newRange":[[35,8],[35,8]],"oldText":"f","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[35,8],[35,8]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,8],[35,8]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,8],[35,8]],"newRange":[[35,8],[35,9]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[35,9],[35,9]],"newRange":[[35,9],[35,10]],"oldText":"","newText":"f"}},{"type":"change","content":{"oldRange":[[35,10],[35,10]],"newRange":[[35,10],[35,11]],"oldText":"","newText":"n"}},{"type":"group-end","snapshot":{"0":{"range":[[35,11],[35,11]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,8],[35,11]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null},"reversed":true,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,8],[35,11]],"newRange":[[35,8],[35,9]],"oldText":"ofn","newText":"a"}},{"type":"change","content":{"oldRange":[[35,9],[35,9]],"newRange":[[35,9],[35,10]],"oldText":"","newText":"f"}},{"type":"change","content":{"oldRange":[[35,10],[35,10]],"newRange":[[35,10],[35,11]],"oldText":"","newText":"n"}},{"type":"group-end","snapshot":{"0":{"range":[[35,11],[35,11]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,11],[35,11]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,8],[35,11]],"newRange":[[35,8],[35,8]],"oldText":"afn","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[35,8],[35,8]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,8],[35,8]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,8],[35,8]],"newRange":[[35,8],[35,9]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[35,9],[35,9]],"newRange":[[35,9],[35,10]],"oldText":"","newText":"f"}},{"type":"change","content":{"oldRange":[[35,10],[35,10]],"newRange":[[35,10],[35,11]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[35,11],[35,11]],"newRange":[[35,11],[35,12]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"0":{"range":[[35,12],[35,12]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,12],[35,12]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,11],[35,12]],"newRange":[[35,11],[35,11]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[35,10],[35,11]],"newRange":[[35,10],[35,10]],"oldText":"n","newText":""}},{"type":"change","content":{"oldRange":[[35,9],[35,10]],"newRange":[[35,9],[35,9]],"oldText":"f","newText":""}},{"type":"change","content":{"oldRange":[[35,8],[35,9]],"newRange":[[35,8],[35,8]],"oldText":"n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[35,8],[35,8]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,8],[35,8]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,8],[35,8]],"newRange":[[35,8],[35,9]],"oldText":"","newText":"f"}},{"type":"change","content":{"oldRange":[[35,9],[35,9]],"newRange":[[35,9],[35,10]],"oldText":"","newText":"n"}},{"type":"group-end","snapshot":{"0":{"range":[[35,10],[35,10]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,10],[35,10]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,8],[35,10]],"newRange":[[35,8],[35,10]],"oldText":"fn","newText":"fn"}},{"type":"group-end","snapshot":{"0":{"range":[[35,10],[35,10]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,10],[35,10]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,9],[35,10]],"newRange":[[35,9],[35,9]],"oldText":"n","newText":""}},{"type":"change","content":{"oldRange":[[35,8],[35,9]],"newRange":[[35,8],[35,8]],"oldText":"f","newText":""}},{"type":"change","content":{"oldRange":[[35,6],[35,8]],"newRange":[[35,6],[35,6]],"oldText":"  ","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[35,6],[35,6]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,0],[37,0]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,0],[37,0]],"newRange":[[35,0],[35,0]],"oldText":"      \n\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[35,0],[35,0]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,0],[35,0]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[60,0],[60,8]],"newRange":[[60,0],[60,0]],"oldText":"        ","newText":""}},{"type":"change","content":{"oldRange":[[34,0],[34,8]],"newRange":[[34,0],[34,0]],"oldText":"        ","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[35,0],[35,0]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[33,9],[33,9]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[33,9],[33,9]],"newRange":[[33,9],[34,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[34,0],[34,0]],"newRange":[[34,0],[34,8]],"oldText":"","newText":"        "}},{"type":"group-end","snapshot":{"0":{"range":[[34,8],[34,8]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[34,8],[34,8]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[34,8],[34,8]],"newRange":[[34,8],[35,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[35,0],[35,0]],"newRange":[[35,0],[35,8]],"oldText":"","newText":"        "}},{"type":"group-end","snapshot":{"0":{"range":[[35,8],[35,8]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,8],[35,8]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,8],[35,8]],"newRange":[[35,8],[35,9]],"oldText":"","newText":"$"}},{"type":"group-end","snapshot":{"0":{"range":[[35,9],[35,9]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,9],[35,9]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,9],[35,9]],"newRange":[[35,9],[35,10]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[35,10],[35,10]],"newRange":[[35,10],[35,11]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[35,11],[35,11]],"newRange":[[35,11],[35,12]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[35,12],[35,12]],"newRange":[[35,12],[35,13]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[35,13],[35,13]],"newRange":[[35,13],[35,14]],"oldText":"","newText":"e"}},{"type":"group-end","snapshot":{"0":{"range":[[35,14],[35,14]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,14],[35,14]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,14],[35,14]],"newRange":[[35,14],[35,15]],"oldText":"","newText":"."}},{"type":"group-end","snapshot":{"0":{"range":[[35,15],[35,15]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,15],[35,15]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,15],[35,15]],"newRange":[[35,15],[36,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[36,0],[36,0]],"newRange":[[36,0],[36,8]],"oldText":"","newText":"        "}},{"type":"group-end","snapshot":{"0":{"range":[[36,8],[36,8]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[36,8],[36,8]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[36,0],[36,8]],"newRange":[[36,0],[36,0]],"oldText":"        ","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[36,0],[36,0]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[36,0],[36,0]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,15],[36,0]],"newRange":[[35,15],[35,15]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[35,15],[35,15]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,15],[35,15]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,15],[35,15]],"newRange":[[35,15],[35,16]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"0":{"range":[[35,16],[35,16]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,16],[35,16]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,16],[35,16]],"newRange":[[35,16],[35,18]],"oldText":"","newText":"  "}},{"type":"change","content":{"oldRange":[[35,17],[35,18]],"newRange":[[35,17],[35,17]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[35,16],[35,17]],"newRange":[[35,16],[35,16]],"oldText":" ","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[35,16],[35,16]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,16],[35,16]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[35,15],[35,16]],"newRange":[[35,15],[35,15]],"oldText":" ","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[35,15],[35,15]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[35,15],[35,15]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[34,0],[34,8]],"newRange":[[34,0],[34,0]],"oldText":"        ","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[35,15],[35,15]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/home/andrei/Dev/riweb/client/app/myaccount/myaccount.controller.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"1d33fc15ad1f6799bf3b05c0ea6148cd7bd4e6af","deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":8,"softTabs":true,"displayBuffer":{"id":9,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/andrei/Dev/riweb/client/app/RipplePeersService/RipplePeersService.service.js","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":36,"softTabs":true,"displayBuffer":{"id":37,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/andrei/Dev/riweb/client/app/myaccount/myaccount.html","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":26,"softTabs":true,"displayBuffer":{"id":27,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/andrei/Dev/riweb/client/app/RippleWalletService/RippleWalletService.service.js","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":48,"softTabs":true,"displayBuffer":{"id":49,"softWrapped":false,"scrollTop":203,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/andrei/Dev/riweb/client/app/myaccount/myaccount.controller.js","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"deserializer":"SettingsView","version":2,"activePanelName":"Updates","uri":"atom://config/updates"}],"activeItemURI":"/home/andrei/Dev/riweb/client/app/myaccount/myaccount.controller.js","focused":true,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-javascript","language-html","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/home/andrei/Dev/riweb/client/app/RipplePeersService/RipplePeersService.service.js":1440528259609,"/home/andrei/Dev/riweb/client/app/myaccount/myaccount.html":1440528458845,"/home/andrei/Dev/riweb/client/app/RippleWalletService/RippleWalletService.service.js":1440528460912,"/home/andrei/Dev/riweb/client/app/myaccount/myaccount.controller.js":1440528521834},"metrics":{"sessionLength":751038},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/home/andrei/Dev/riweb":{"isExpanded":false,"entries":{}}},"selectedPath":"/home/andrei/Dev/riweb","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"symbol-gen":{},"keybinding-resolver":{},"find-and-replace":{"findOptions":{"findPattern":".","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":[],"replaceHistory":[],"pathsHistory":[]}}}