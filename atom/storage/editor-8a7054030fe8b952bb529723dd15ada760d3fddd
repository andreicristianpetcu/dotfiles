{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":64,"width":1920,"height":1016,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/home/andrei/Dev/riweb"],"buffers":[{"text":"'use strict';\n\nangular.module('riwebApp')\n    .service('RipplePeersService', function (RippleRemoteService) {\n        var peersInfo = {\n            peers: []\n        };\n        \n        return {\n            refreshPeers: function (callback) {\n                RippleRemoteService.onRemotePresent(function (remote) {\n                    remote.requestPeers(function (error, info) {\n                        if(info && info.peers){\n                            peersInfo.peers = info.peers;\n                        } else {\n                            peersInfo.peers = undefined;\n                        }\n                        if(callback){\n                            callback(peersInfo);\n                        }\n                    });\n                });\n            },\n            peersInfo: peersInfo\n        };\n    });\n","markerStore":{"nextMarkerId":57,"markersById":{"0":{"range":{"start":{"row":7,"column":8},"end":{"row":7,"column":8}},"properties":{"type":"selection","editorId":8,"goalScreenRange":null,"preserveFolds":true,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"7":{"range":{"start":{"row":2,"column":25},"end":{"row":2,"column":26}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"8":{"range":{"start":{"row":2,"column":14},"end":{"row":2,"column":15}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"9":{"range":{"start":{"row":2,"column":25},"end":{"row":2,"column":26}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"10":{"range":{"start":{"row":2,"column":14},"end":{"row":2,"column":15}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"43":{"range":{"start":{"row":7,"column":0},"end":{"row":8,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"49":{"range":{"start":{"row":7,"column":0},"end":{"row":8,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"51":{"range":{"start":{"row":7,"column":0},"end":{"row":8,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"53":{"range":{"start":{"row":7,"column":0},"end":{"row":8,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"56":{"range":{"start":{"row":7,"column":0},"end":{"row":8,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false}},"version":2},"history":{"version":2,"nextCheckpointId":37,"undoStack":[],"redoStack":[]},"encoding":"utf-8","filePath":"/home/andrei/Dev/riweb/client/app/RipplePeersService/RipplePeersService.service.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"44e45bdb19e272ac3f80450c64626fadfffe6a2f","deserializer":"TextBuffer","version":2},{"text":"'use strict';\n\nangular.module('riwebApp')\n    .service('RippleWalletService', function (RippleAccountService,\n        Auth, socket, $log) {\n\n        var walletInfo = {\n            wallet: {}\n        };\n\n        var currentUser = Auth.getCurrentUser();\n\n        function getCurrentUserWallet(callback) {\n            currentUser = Auth.getCurrentUser();\n\n            if (!currentUser.email) {\n                return; // not logged in\n            }\n\n            socket.socket.on('post:create_wallet', function (rippleAddress) {\n                socket.socket.removeAllListeners('post:create_wallet');\n                walletInfo.wallet = rippleAddress;\n\n                RippleAccountService.accountInfo.account = currentUser.name;\n                RippleAccountService.accountInfo.iban = currentUser.iban;\n\n                callback();\n            });\n\n            socket.socket.emit('create_wallet', { ownerEmail: currentUser.email, role: currentUser.role });\n        }\n\n        function loadCurrentUserBalance() {\n            $log.debug('loadCurrentUserBalance');\n            var user = Auth.getCurrentUser();\n\n            if (!user.email) {\n                return; // No user is logged in, please go away\n            }\n\n            socket.socket.on('post:list_transactions', function (result) {\n                if (result.status === 'success') {\n                    RippleAccountService.accountInfo.transactions = result.transactions;\n                    if (console.table) {\n                        console.log('post:list_transactions');\n                        console.table(result.transactions);\n                    }\n                }\n            });\n\n            // socket.socket.emit('account_info', user.email);\n            socket.socket.emit('list_transactions', user.email);\n        }\n\n        return {\n            getCurrentUserWallet: getCurrentUserWallet,\n            loadCurrentUserBalance: loadCurrentUserBalance,\n            walletInfo: walletInfo\n        };\n    });\n","markerStore":{"nextMarkerId":40,"markersById":{"0":{"range":{"start":{"row":11,"column":0},"end":{"row":11,"column":0}},"properties":{"type":"selection","editorId":26,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1":{"range":{"start":{"row":13,"column":0},"end":{"row":13,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true},"2":{"range":{"start":{"row":13,"column":0},"end":{"row":13,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":10,"undoStack":[],"redoStack":[]},"encoding":"utf-8","filePath":"/home/andrei/Dev/riweb/client/app/RippleWalletService/RippleWalletService.service.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"3a9ee58502454bc5fda648123a0e0fe74938dd75","deserializer":"TextBuffer","version":2},{"text":"<div ng-include=\"'components/navbar/navbar.html'\"></div>\n\n<div class=\"container\">\n    <div class=\"panel panel-info\">\n        <div class=\"panel-heading\">\n            <h3 id=\"panel-title\" class=\"panel-title\">My account: <strong>{{getMyAccountUser().email}}</strong></h3>\n        </div>\n        <div class=\"panel-body\">\n            <h4 id=\"panel-title\" class=\"panel-title\" ng-show=\"walletInfo.wallet\">Account: <strong>{{getMyAccountUser().name}}</strong></h4>            \n            <h4 ng-show=\"accountInfo.iban\">IBAN: <strong>{{accountInfo.iban}}</strong></h4>            \n            <!--<h4 ng-show=\"accountInfo.balance\">Current balance: <strong>{{accountInfo.balance}}</strong> â‚¬</h4>-->\n\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"alert alert-warning\" ng-hide=\"walletInfo.wallet\" role=\"alert\">Please wait, you do not have an wallet yet.</div>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <button ng-show=\"walletInfo.wallet\" type=\"button\" class=\"btn btn-default btn-lg btn-success\"\n                            aria-label=\"Left Align\"\n                            ng-click=\"transferMoney()\">\n                        <span class=\"glyphicon glyphicon-euro\" aria-hidden=\"true\"></span>\n                        Transfer money\n                    </button>\n                <span ng-show=\"walletInfo.wallet\">\n                    Amount to transfer <input ng-model=\"amountToTransfer\"></input>\n                </span>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"panel panel-info\" ng-show=\"accountInfo.transactions\">\n        <div class=\"panel-heading\">\n            <h3 id=\"panel-title\" class=\"panel-title\">Transactions</strong></h3>\n        </div>\n        <div class=\"panel-body\">\n            <div class=\"alert alert-warning\" ng-hide=\"accountInfo.transactions\" role=\"alert\">No transactions yet</div>\n\n            <table class=\"table\" ng-show=\"accountInfo.transactions\">\n                <thead>\n                <tr>\n                    <th>From</th>\n                    <th>To</th>\n                    <th>Amount</th>\n                    <th ng-hide=\"true\">Fee</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr ng-repeat=\"transaction in accountInfo.transactions\">\n                    <td>{{transaction.source}}</td>\n                    <td>{{transaction.destination}}</td>\n                    <td>{{transaction.amount}}</td>\n                    <td ng-hide=\"true\">{{transaction.fee}}</td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div class=\"panel panel-info\" ng-hide=\"true\">\n        <div class=\"panel-heading\">\n            <h3 id=\"panel-title\" class=\"panel-title\">Network status</strong></h3>\n        </div>\n        <div class=\"panel-body\">\n            <div class=\"alert alert-warning\" ng-hide=\"serverInfo.server_name\" role=\"alert\">Not connected to server yet</div>\n            <h4 ng-show=\"serverInfo.server_name\">Connected to server: <strong>{{serverInfo.server_name}}</strong></h4>\n            <h4 ng-show=\"serverInfo.ledgerClosed\">Last ledger closed: <strong>{{serverInfo.ledgerClosed}}</strong></h4>\n            <h4>{{serverInfo.error}}</h4>\n        </div>\n    </div>\n    <!--<div class=\"panel panel-info\" ng-show=\"serverInfo.server_name\">\n        <div class=\"panel-heading\">\n            <h3 id=\"panel-title\" class=\"panel-title\">Peers</strong></h3>\n        </div>\n        <div class=\"panel-body\">\n            <div class=\"alert alert-warning\" ng-hide=\"peersInfo.peers\" role=\"alert\">Not connected to peers</div>\n            <table class=\"table\" ng-show=\"peersInfo.peers\">\n                <thead>\n                <tr>\n                    <th>IP</th>\n                    <th>Ledger</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr ng-repeat=\"peer in peersInfo.peers\">\n                    <td>{{peer.address}}</td>\n                    <td>{{peer.ledger}}</td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>-->\n\n\n</div>\n","markerStore":{"nextMarkerId":76,"markersById":{"0":{"range":{"start":{"row":21,"column":51},"end":{"row":21,"column":51}},"properties":{"type":"selection","editorId":36,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"26":{"range":{"start":{"row":22,"column":51},"end":{"row":22,"column":52}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"27":{"range":{"start":{"row":22,"column":52},"end":{"row":22,"column":53}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"74":{"range":{"start":{"row":20,"column":21},"end":{"row":20,"column":27}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"75":{"range":{"start":{"row":25,"column":22},"end":{"row":25,"column":28}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false}},"version":2},"history":{"version":2,"nextCheckpointId":21,"undoStack":[],"redoStack":[]},"encoding":"utf-8","filePath":"/home/andrei/Dev/riweb/client/app/myaccount/myaccount.html","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"ef4a0d1b644a111c7ef9182e8f3307452b16777a","deserializer":"TextBuffer","version":2},{"text":"'use strict';\n\nangular.module('riwebApp')\n    .controller('MyaccountCtrl', function ($scope, $rootScope, Auth, User, Wallet,\n        RippleRemoteService, FormattingService, RipplePeersService,\n        RippleAccountService, RippleWalletService, RippleTransactionService) {\n\n        // Dismiss user message\n        if ($rootScope.message) {\n            delete $rootScope.message;\n        }\n\n        $scope.amountToTransfer = 100;\n\n        $scope.getMyAccountUser = Auth.getCurrentUser;\n        $scope.getAmountDisplayText = FormattingService.getAmountDisplayText;\n\n        $scope.transferMoney = function () {\n            RippleTransactionService.transferMoney($scope.amountToTransfer);\n        };\n\n             $scope.serverInfo = RippleRemoteService.serverInfo;\n             $scope.peersInfo = RipplePeersService.peersInfo;\n             $scope.accountInfo = RippleAccountService.accountInfo;\n        $scope.walletInfo = RippleWalletService.walletInfo;\n\n        var loadCurrentUserBalance = RippleWalletService.loadCurrentUserBalance;\n        var refreshPeers = RipplePeersService.refreshPeers;\n\n        function refreshAngular() {\n            _.defer(function () {\n                $scope.$apply();\n            });\n        }\n\n        function refreshCurrentUserWallet() {\n            RippleWalletService.getCurrentUserWallet(function () {\n                loadCurrentUserBalance(refreshAngular);\n            });\n        }\n\n        RippleAccountService.resetAccount();\n        refreshAngular();\n\n        $scope.$on('currentUser', function () {\n            refreshCurrentUserWallet();\n        });\n\n        refreshCurrentUserWallet();\n        RippleRemoteService.onRemotePresent(function (remote) {\n\n            remote.on('ledger_closed', function () {\n                refreshPeers(refreshAngular);\n                loadCurrentUserBalance(refreshAngular);\n            });\n\n            remote.on('transactions', function () {\n                loadCurrentUserBalance(refreshAngular);\n            });\n        });\n\n    });\n","markerStore":{"nextMarkerId":174,"markersById":{"0":{"range":{"start":{"row":17,"column":0},"end":{"row":17,"column":0}},"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"76":{"range":{"start":{"row":62,"column":0},"end":{"row":62,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"77":{"range":{"start":{"row":62,"column":0},"end":{"row":62,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"145":{"range":{"start":{"row":62,"column":0},"end":{"row":62,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"146":{"range":{"start":{"row":62,"column":0},"end":{"row":62,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"149":{"range":{"start":{"row":62,"column":0},"end":{"row":62,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"150":{"range":{"start":{"row":62,"column":0},"end":{"row":62,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"172":{"range":{"start":{"row":21,"column":0},"end":{"row":24,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"173":{"range":{"start":{"row":60,"column":0},"end":{"row":61,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false}},"version":2},"history":{"version":2,"nextCheckpointId":127,"undoStack":[],"redoStack":[{"type":"group-end","snapshot":{"0":{"range":[[17,0],[24,59]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[17,0],[25,0]],"newRange":[[17,0],[24,59]],"oldText":"        $scope.transferMoney = function () {\n            RippleTransactionService.transferMoney($scope.amountToTransfer);\n        };\n\n             $scope.serverInfo = RippleRemoteService.serverInfo;\n             $scope.peersInfo = RipplePeersService.peersInfo;\n             $scope.accountInfo = RippleAccountService.accountInfo;\n        $scope.walletInfo = RippleWalletService.walletInfo;\n","newText":"        $scope.transferMoney = function() {\n          RippleTransactionService.transferMoney($scope.amountToTransfer);\n        };\n\n        $scope.serverInfo = RippleRemoteService.serverInfo;\n        $scope.peersInfo = RipplePeersService.peersInfo;\n        $scope.accountInfo = RippleAccountService.accountInfo;\n        $scope.walletInfo = RippleWalletService.walletInfo;"}},{"type":"group-start","snapshot":{"0":{"range":[[17,0],[25,0]],"properties":{"type":"selection","editorId":48,"goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}}]},"encoding":"utf-8","filePath":"/home/andrei/Dev/riweb/client/app/myaccount/myaccount.controller.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"7b1731e52bc55a36c18b18df269d623022a85c07","deserializer":"TextBuffer","version":2},{"text":"# EditorConfig helps developers define and maintain consistent\n# coding styles between different editors and IDEs\n# editorconfig.org\n\nroot = true\n\n\n[*]\n\n# Change these settings to your own preference\nindent_style = space\nindent_size = 2\n\n# We recommend you to keep these unchanged\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n","markerStore":{"nextMarkerId":37,"markersById":{"0":{"range":{"start":{"row":19,"column":0},"end":{"row":19,"column":0}},"properties":{"type":"selection","editorId":66,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"13":{"range":{"start":{"row":19,"column":0},"end":{"row":19,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"14":{"range":{"start":{"row":19,"column":5},"end":{"row":19,"column":6}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"31":{"range":{"start":{"row":19,"column":0},"end":{"row":19,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"32":{"range":{"start":{"row":19,"column":5},"end":{"row":19,"column":6}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"35":{"range":{"start":{"row":19,"column":0},"end":{"row":19,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"36":{"range":{"start":{"row":19,"column":5},"end":{"row":19,"column":6}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false}},"version":2},"history":{"version":2,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf-8","filePath":"/home/andrei/Dev/riweb/.editorconfig","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"9bb210d7cd9310319b10ed733408c481d5cdff8c","deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":8,"softTabs":true,"displayBuffer":{"id":9,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/andrei/Dev/riweb/client/app/RipplePeersService/RipplePeersService.service.js","tabLength":2,"largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":36,"softTabs":true,"displayBuffer":{"id":37,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/andrei/Dev/riweb/client/app/myaccount/myaccount.html","tabLength":2,"largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":26,"softTabs":true,"displayBuffer":{"id":27,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/andrei/Dev/riweb/client/app/RippleWalletService/RippleWalletService.service.js","tabLength":2,"largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":48,"softTabs":true,"displayBuffer":{"id":49,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/andrei/Dev/riweb/client/app/myaccount/myaccount.controller.js","tabLength":2,"largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":66,"softTabs":true,"displayBuffer":{"id":67,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/andrei/Dev/riweb/.editorconfig","tabLength":2,"largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"deserializer":"SettingsView","version":2,"activePanelName":"Keybindings","uri":"atom://config/updates"}],"activeItemURI":"atom://config/updates","focused":true,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-javascript","language-html","editorconfig","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/home/andrei/Dev/riweb/client/app/RipplePeersService/RipplePeersService.service.js":1440528259609,"/home/andrei/Dev/riweb/client/app/myaccount/myaccount.html":1440528458845,"/home/andrei/Dev/riweb/client/app/RippleWalletService/RippleWalletService.service.js":1440528460912,"/home/andrei/Dev/riweb/client/app/myaccount/myaccount.controller.js":1440529628834,"/home/andrei/Dev/riweb/.editorconfig":1440529650744},"metrics":{"sessionLength":76454},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/home/andrei/Dev/riweb":{"isExpanded":false,"entries":{}}},"hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"symbol-gen":{},"keybinding-resolver":{},"find-and-replace":{"findOptions":{"findPattern":"","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":[],"replaceHistory":[],"pathsHistory":[]}}}