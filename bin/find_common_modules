#!/bin/bash

if (( $# != 2 )); then
    echo "Illegal number of parameters. You need 2 parameters. The first and the second project you want to find common dependencies for. Example:

\$find_common_modules org.apache.camel.example:camel-example-aggregate org.apache.camel.example:camel-example-kafka
"
    exit 1
fi

script_prefix="[COMMON MODULES FINDER]"
process_project_in_file(){
    project_name=$1
    file_name=$2
    echo "$script_prefix Processing project $project_name in $file_name"
    mvn dependency:tree --projects "$project_name" | tee "$file_name"
    sed -i '/jar/!d' "$file_name"
    sed -i '/Downloading/d' "$file_name"
    sed -i '/Downloaded/d' "$file_name"
    sed -i '/Building/d' "$file_name"
    sed -i 's/\[INFO\]\ //g' "$file_name"
    sed -i 's/+//g' "$file_name"
    sed -i 's/\\-//g' "$file_name"
    sed -i 's/-\ //g' "$file_name"
    sed -i 's/^ *//g' "$file_name"
    sed -i 's/|//g' "$file_name"
    sed -i 's/:provided//g' "$file_name"
    sed -i 's/:compile//g' "$file_name"
    sed -i 's/^ *//' "$file_name"
    echo "$script_prefix Flatten denendency tree of project $project_name is:"
    sort -u "$file_name" -o "$file_name"
    cat "$file_name"
}

argument_index=1
for var in "$@"
do
    process_project_in_file "$var" "/tmp/pom_files_$argument_index.txt"
    argument_index=$(($argument_index+1))
done

echo "$script_prefix The common projects between $1 and $2 are:"
comm -1 -2 /tmp/pom_files_1.txt /tmp/pom_files_2.txt
